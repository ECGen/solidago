%!PS-Adobe-3.0
%%DocumentNeededResources: font Helvetica
%%+ font Helvetica-Bold
%%+ font Helvetica-Oblique
%%+ font Helvetica-BoldOblique
%%+ font Symbol
%%DocumentMedia: special 432 432 0 () ()
%%Title: R Graphics Output
%%Creator: R Software
%%Pages: (atend)
%%BoundingBox: 0 0 432 432
%%EndComments
%%BeginProlog
/bp  { gs gs } def
% begin .ps.prolog
/gs  { gsave } def
/gr  { grestore } def
/ep  { showpage gr gr } def
/m   { moveto } def
/l  { rlineto } def
/np  { newpath } def
/cp  { closepath } def
/f   { fill } def
/o   { stroke } def
/c   { newpath 0 360 arc } def
/r   { 4 2 roll moveto 1 copy 3 -1 roll exch 0 exch rlineto 0 rlineto -1 mul 0 exch rlineto closepath } def
/p1  { stroke } def
/p2  { gsave bg fill grestore newpath } def
/p3  { gsave bg fill grestore stroke } def
/p6  { gsave bg eofill grestore newpath } def
/p7  { gsave bg eofill grestore stroke } def
/t   { 5 -2 roll moveto gsave rotate
       1 index stringwidth pop
       mul neg 0 rmoveto show grestore } def
/ta  { 4 -2 roll moveto gsave rotate show } def
/tb  { 2 -1 roll 0 rmoveto show } def
/cl  { grestore gsave newpath 3 index 3 index moveto 1 index
       4 -1 roll lineto  exch 1 index lineto lineto
       closepath clip newpath } def
/rgb { setrgbcolor } def
/s   { scalefont setfont } def
% end   .ps.prolog
%%IncludeResource: font Helvetica
/Helvetica findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font1 exch definefont pop
%%IncludeResource: font Helvetica-Bold
/Helvetica-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font2 exch definefont pop
%%IncludeResource: font Helvetica-Oblique
/Helvetica-Oblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font3 exch definefont pop
%%IncludeResource: font Helvetica-BoldOblique
/Helvetica-BoldOblique findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Font4 exch definefont pop
%%IncludeResource: font Symbol
/Symbol findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  currentdict
  end
/Font5 exch definefont pop
%%EndProlog
%%Page: 1 1
bp
0.00 0.00 432.00 432.00 cl
/bg { 0.7451 setgray } def
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
71.73 76.41 144.24 244.53 r p3
244.82 76.41 144.24 296.55 r p3
0.00 0.00 432.00 432.00 cl
/Font1 findfont 12 s
0 setgray
143.85 47.52 (No Elk) .5 0 t
316.95 47.52 (Elk) .5 0 t
0.00 0.00 432.00 432.00 cl
/Font1 findfont 12 s
0 setgray
12.96 184.52 (Fr) 90 ta
-0.120 (agmentation) tb gr
0.00 0.00 432.00 432.00 cl
0 setgray
0.75 setlinewidth
[] 0 setdash
1 setlinecap
1 setlinejoin
10.00 setmiterlimit
np
59.04 76.41 m
0 295.90 l
o
np
59.04 76.41 m
-7.20 0 l
o
np
59.04 118.68 m
-7.20 0 l
o
np
59.04 160.95 m
-7.20 0 l
o
np
59.04 203.22 m
-7.20 0 l
o
np
59.04 245.49 m
-7.20 0 l
o
np
59.04 287.77 m
-7.20 0 l
o
np
59.04 330.04 m
-7.20 0 l
o
np
59.04 372.31 m
-7.20 0 l
o
/Font1 findfont 12 s
41.76 76.41 (0.00) .5 90 t
41.76 118.68 (0.05) .5 90 t
41.76 160.95 (0.10) .5 90 t
41.76 203.22 (0.15) .5 90 t
41.76 245.49 (0.20) .5 90 t
41.76 287.77 (0.25) .5 90 t
41.76 330.04 (0.30) .5 90 t
41.76 372.31 (0.35) .5 90 t
ep
%%Trailer
%%Pages: 1
%%EOF
